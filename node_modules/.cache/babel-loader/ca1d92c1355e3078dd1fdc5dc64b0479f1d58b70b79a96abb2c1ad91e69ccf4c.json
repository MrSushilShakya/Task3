{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_tutorial\\\\react_apps\\\\project9\\\\src\\\\PostDataToApi.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostDataToApi = () => {\n  _s();\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [responseData, setResponseData] = useState(null);\n  const [error, setError] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('https://chimpu.xyz/api/post.php', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          phonenumber: phoneNumber\n        })\n      });\n\n      // Check if response is ok\n      if (response.ok) {\n        // Access response headers\n        const headers = response.headers;\n        // Get data from headers\n        const dataFromHeaders = headers.get('your-header-key'); // Replace 'your-header-key' with the actual header key you expect\n\n        // Set response data to be displayed\n        setResponseData(dataFromHeaders);\n        setError(null);\n      } else {\n        const errorData = await response.json();\n        setError(errorData);\n        setResponseData(null);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setError({\n        error: true,\n        message: 'An error occurred while fetching data'\n      });\n      setResponseData(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Phone Number:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: phoneNumber,\n          onChange: e => setPhoneNumber(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), responseData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Data received in headers:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: responseData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(PostDataToApi, \"PDXrZ3MD1ckfN1zzTVg+JkpfwjQ=\");\n_c = PostDataToApi;\nexport default PostDataToApi;\nvar _c;\n$RefreshReg$(_c, \"PostDataToApi\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PostDataToApi","_s","phoneNumber","setPhoneNumber","responseData","setResponseData","error","setError","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","phonenumber","ok","dataFromHeaders","get","errorData","json","console","message","children","onSubmit","type","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/React_tutorial/react_apps/project9/src/PostDataToApi.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst PostDataToApi = () => {\r\n  const [phoneNumber, setPhoneNumber] = useState('');\r\n  const [responseData, setResponseData] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await fetch('https://chimpu.xyz/api/post.php', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ phonenumber: phoneNumber })\r\n      });\r\n\r\n      // Check if response is ok\r\n      if (response.ok) {\r\n        // Access response headers\r\n        const headers = response.headers;\r\n        // Get data from headers\r\n        const dataFromHeaders = headers.get('your-header-key'); // Replace 'your-header-key' with the actual header key you expect\r\n\r\n        // Set response data to be displayed\r\n        setResponseData(dataFromHeaders);\r\n        setError(null);\r\n      } else {\r\n        const errorData = await response.json();\r\n        setError(errorData);\r\n        setResponseData(null);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      setError({ error: true, message: 'An error occurred while fetching data' });\r\n      setResponseData(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          Phone Number:\r\n          <input\r\n            type=\"text\"\r\n            value={phoneNumber}\r\n            onChange={(e) => setPhoneNumber(e.target.value)}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n      {error && (\r\n        <div>\r\n          <p>Error: {error.message}</p>\r\n        </div>\r\n      )}\r\n      {responseData && (\r\n        <div>\r\n          <h2>Data received in headers:</h2>\r\n          <p>{responseData}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostDataToApi;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}